name: build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
      - develop

jobs:
  integration_test:
    runs-on: ubuntu-latest
    container: 
      image: docker.io/kentsday/dfx_rust:bullseye
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: 'wasm32-unknown-unknown'
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: 'src/icnaming_ledger'
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: 'src'
      - name: run integration test
        run: |
          cd $GITHUB_WORKSPACE/src
          dfx start --background
          chmod a+x ./sh_setup_dev.sh
          ./sh_setup_dev.sh

          chmod a+x ./sh_build.sh
          ./sh_build.sh

          npm run test-report
          dfx stop
      - uses: deblockt/cucumber-report-annotations-action@v1.8
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report.json"
  unit_test:
    runs-on: ubuntu-latest
    container: 
      image: docker.io/kentsday/dfx_rust:bullseye
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: 'wasm32-unknown-unknown'
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: 'src'
      - name: setup dev
        run: |
          cd $GITHUB_WORKSPACE/src
          dfx start --background
          chmod a+x ./sh_setup_dev.sh
          ./sh_setup_dev.sh
      - name:  unit test
        run: |
          cd $GITHUB_WORKSPACE/src
          cargo test
          cd $GITHUB_WORKSPACE/src/icnaming_ledger
          cargo test
  create_package:
    runs-on: ubuntu-latest
    container: 
      image: docker.io/kentsday/dfx_rust:bullseye
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: 'wasm32-unknown-unknown'
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: 'src/icnaming_ledger'
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: 'src'
      - name: run package
        run: |
          cd $GITHUB_WORKSPACE/src
          dfx start --background
          chmod a+x ./sh_setup_dev.sh
          ./sh_setup_dev.sh
          
          chmod a+x ./sh_package.sh
          ./sh_package.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "dev"
          path: src/package/dev/
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "staging"
          path: src/package/staging/
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "production"
          path: src/package/production/