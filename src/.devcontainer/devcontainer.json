{
  "name": "Rust",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      // Use the VARIANT arg to pick a Debian OS version: buster, bullseye
      // Use bullseye when on local on arm64/Apple Silicon.
      "VARIANT": "bullseye"
    }
  },
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined"
  ],
  "remoteUser": "root",
  // "postStartCommand":["bash", "${containerWorkspaceFolder}/sh_post_container_start.sh"],
  "postCreateCommand":["bash", "${containerWorkspaceFolder}/sh_post_container_created.sh"],
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "lldb.executable": "/usr/bin/lldb",
    // VS Code don't watch files under ./target
    "files.watcherExclude": {
      "**/target/**": true
    },
    "rust-analyzer.checkOnSave.command": "clippy",
    "files.exclude": {
      ".dfx": true
    }
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "mutantdino.resourcemonitor",
    "tamasfe.even-better-toml",
    "serayuzgur.crates",
    "github.copilot"
  ],
  "mounts": [
    "target=${containerWorkspaceFolder}/node_modules,type=volume",
    "target=${containerWorkspaceFolder}/.dfx,type=volume",
    "target=${containerWorkspaceFolder}/target,type=volume"
  ]
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "rustc --version",
  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
}
